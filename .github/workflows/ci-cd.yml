name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
    paths:
      - 'microservices-demo/src/**'
      - 'k8s-manifests/**'
      - '.github/workflows/ci-cd.yml'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build:
    name: Build Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        service: [frontend, cartservice, checkoutservice, productcatalogservice, currencyservice, paymentservice, shippingservice, emailservice, recommendationservice, adservice]
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: ./microservices-demo/src/${{ matrix.service }}${{ matrix.service == 'cartservice' && '/src' || '' }}
        push: true
        tags: ${{ env.REGISTRY }}/${{ github.repository }}/microservices-${{ matrix.service }}:${{ env.IMAGE_TAG }}

  scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      security-events: write
    strategy:
      matrix:
        service: [frontend, cartservice, checkoutservice, productcatalogservice, currencyservice, paymentservice, shippingservice, emailservice, recommendationservice, adservice]
    steps:
    - uses: actions/checkout@v4
    
    - name: Scan image
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.REGISTRY }}/${{ github.repository }}/microservices-${{ matrix.service }}:${{ env.IMAGE_TAG }}
        format: 'table'
        severity: 'CRITICAL,HIGH'

  deploy:
    name: Deploy to Kind
    runs-on: self-hosted
    needs: [build, scan]
    permissions:
      contents: read
    steps:
    - uses: actions/checkout@v4
    
    - name: Update manifests
      run: |
        find k8s-manifests -name '*.yaml' -exec sed -i '' 's|matthewntsiful/microservices-|${{ env.REGISTRY }}/${{ github.repository }}/microservices-|g' {} \;
        find k8s-manifests -name '*.yaml' -exec sed -i '' 's|:latest|:${{ env.IMAGE_TAG }}|g' {} \;
    
    - name: Deploy
      run: |
        kubectl apply -f k8s-manifests/ -n microservices
        for deployment in $(kubectl get deployments -n microservices -o name); do kubectl rollout restart $deployment -n microservices; done
        for deployment in $(kubectl get deployments -n microservices -o name); do kubectl rollout status $deployment -n microservices --timeout=120s || true; done
        echo "âœ… Deployed successfully!"